<?php

namespace Tests\Feature;

use App\Models\Category;
use App\Models\Product;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Tests\TestCase;

class ProductControllerTest extends TestCase
{
    use RefreshDatabase;

    protected function setUp() : void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
    }
    public function test_index_products()
    {
        Category::factory(4)->create();
        Product::factory(5)->create();
        //factory(Product::class, 5)->create();

        $response = $this->getJson('/api/products');

        $response->assertSuccessful();
        //$response->assertHeader('content-type', 'application/json');
        $response->assertJsonCount(5);
    }
    public function test_create_new_product()
    {
        $data = [
            'name' => 'Hola',
            'price' => 1000,
        ];
        $response = $this->postJson('/api/products', $data);
        $response->assertSuccessful();
        //$response->assertHeader('content-type', 'application/json');
        $this->assertDatabaseHas('products', $data);
    }
    public function test_update_product()
    {
        //$product = factory(Product::class)->create();
        Category::factory(4)->create();
        $product = Product::factory()->create();

        $data = [
            'name' => 'Update Product',
            'price' => 20000,
        ];

        $response = $this->patchJson("/api/products/{$product->getKey()}", $data);
        $response->assertSuccessful();
        //$response->assertHeader('content-type', 'application/json');
    }
    public function test_show_product()
    {
     //   $product = factory(Product::class)->create();
        Category::factory(4)->create();
        $product = Product::factory()->create();

        $response = $this->getJson("/api/products/{$product->getKey()}");
        //$response = $this->getJson("/api/products/{$product->id}");

        $response->assertSuccessful();
        $response->assertHeader('content-type', 'application/json');
    }
    public function test_delete_product()
    {
        //$product = factory(Product::class)->create();
        Category::factory(4)->create();
        $product = Product::factory()->create();

        $response = $this->deleteJson("/api/products/{$product->getKey()}");

        $response->assertSuccessful();
        $response->assertHeader('content-type', 'application/json');
        $this->assertDeleted($product);
    }

}
